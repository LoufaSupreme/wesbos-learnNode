const mongoose = require('mongoose');
mongoose.Promise = global.Promise;
const slug = require('slugs');

const storeSchema = new mongoose.Schema({
    name: {
        type: String,
        trim: true, //trims uploaded strings before adding to the db
        required: 'Please enter a store name!' // could also just put true, however it is better to put an error msg like this
    },
    slug: String,
    description: {
        type: String,
        trim: true,
    },
    tags: [String],
    created: {
        type: Date,
        default: Date.now,
    },
    location: {
        type: {
            type: String,
            default: 'Point',
        },
        coordinates: [{
            type: Number,
            required: 'You must supply coordinates!',
        }],
        address: {
            type: String,
            required: 'You must supply an address!'
        },
    },
    photo: String,
});

storeSchema.pre('save', async function(next) {
    if (!this.isModified('name')) {
        next();  //skip it
        return;
    }
    this.slug = slug(this.name);
    // before we save a new store with this name, check to see if any other stores with that name already exist in database
    // this is important bc the slug is generated by the name, and the slug is used in the URLs for the indivudal store pages.  So, if the
    // name is the same and the slug is the same, then all stores with the same name will point to the same URL.
    // So... find all the stores with the same name and add a number to the end of the slug to make it unique. 
    const slugRegEx = new RegExp(`^(${this.slug})((-[0-9]*$)?)$`, 'i');
    const storesWithSlug = await this.constructor.find({ slug: slugRegEx });
    
    if (storesWithSlug.length) {
        this.slug = `${this.slug}-${storesWithSlug.length + 1}`;
    }
    next();
})

module.exports = mongoose.model('Store', storeSchema);